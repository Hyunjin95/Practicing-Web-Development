{"version":3,"file":"static/webpack/static\\development\\pages\\robots.js.5ef449711144c9a3f8f1.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport MainPage from '../components/MainPage';\n\nexport interface Robot {\n  name: string;\n  email: string;\n  id: number;\n}\n\nexport interface AppProps {\n  robots: Array<Robot>;\n  isError: boolean;\n}\n\n// eslint-disable-next-line\nexport const prefix =\n  process.env.NODE_ENV === 'production'\n    ? 'https://hyunjin95.github.io/web-practice'\n    : '';\n\nexport interface StatelessPage<P> extends React.FC<P> {\n  getInitialProps?: () => Promise<P>;\n}\n\nconst Index: StatelessPage<AppProps> = ({\n  robots = [],\n  isError = false,\n}: AppProps): JSX.Element => (\n  <Layout prefix={prefix}>\n    <MainPage robots={robots} isError={isError} />\n  </Layout>\n);\n\nIndex.getInitialProps = async (): Promise<AppProps> => {\n  let robots: Array<Robot> = [];\n  let isError = false;\n\n  try {\n    const req = await fetch('https://jsonplaceholder.typicode.com/users');\n    robots = await req.json();\n  } catch (err) {\n    isError = true;\n  }\n\n  return {\n    robots,\n    isError,\n  };\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAaA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;AACA;AATA;AAAA;AAYA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;A","sourceRoot":""}